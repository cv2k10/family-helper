{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _JSON$stringify from \"@babel/runtime-corejs2/core-js/json/stringify\";\nimport 'isomorphic-fetch';\nimport Head from 'next/head';\nimport Router, { useRouter } from 'next/router';\nimport React, { useEffect, useRef, useState } from 'react';\nimport areas from '../components/areas.js';\nimport services from '../components/items.js';\nimport Layout from '../components/Layout';\nimport prices from '../components/prices.js';\nimport \"../scss/fonts.scss\";\nimport \"../scss/style.scss\";\n\nvar submitForm = function submitForm(formData) {\n  /* onSubmit event with input param, e.target (form) */\n  var data = {\n    form: {\n      fullname: formData.fullname.value,\n      email: formData.email.value,\n      gender: formData.gender.value,\n      age: formData.age.value,\n      health: formData.health.value,\n      healthstatus: formData.healthstatus.value,\n      phone: formData.phone.value,\n      // phonehome: formData.phonehome.value,\n      fulladdress: formData.fulladdress.value,\n      // urgent: formData.urgent.value,\n      service: formData.service.value,\n      otherservice: formData.otherservice.value,\n      date: formData.date.value,\n      period: formData.period.value,\n      time: formData.time.value,\n      area: formData.area.value,\n      pickup: formData.pickup.value,\n      visit: formData.visit.value,\n      price: formData.price.value\n    } // console.log(JSON.stringify(data, null, 2));\n\n  };\n  fetch('/api/order', {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify(data)\n  }).then(function (res) {\n    // res.status === 200 ? this.setState({ submitted: true }) : ''\n    if (res.status === 200) {\n      Router.push({\n        pathname: '/OrderCompleted',\n        query: data.form\n      });\n    } else throw new Error('Error: response status is ' + res.status);\n  })[\"catch\"](function (e) {\n    console.error(e.message);\n  });\n};\n\nvar Order = function Order() {\n  var initSelection = {\n    services: services.items,\n    areas: areas.klangValley,\n    period: prices.common.periods[0].hour\n  };\n\n  var nextDayDate = function nextDayDate() {\n    var today = new Date();\n    var tomorrow = new Date();\n    tomorrow.setDate(today.getDate() + 1);\n    return tomorrow.toISOString().split('T')[0];\n  };\n\n  var inputHealthStatus = useRef();\n  var inputOtherService = useRef();\n\n  var _useState = useState(initSelection),\n      _useState2 = _slicedToArray(_useState, 2),\n      selection = _useState2[0],\n      setSelection = _useState2[1];\n\n  var _useState3 = useState(prices.common.periods[0].price),\n      _useState4 = _slicedToArray(_useState3, 2),\n      totalPrice = _useState4[0],\n      setTotalPrice = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      queryInput = _useState6[0],\n      setQueryInput = _useState6[1];\n\n  var router = useRouter();\n\n  var _useState7 = useState(prices.common.periods[0].hour),\n      _useState8 = _slicedToArray(_useState7, 2),\n      period = _useState8[0],\n      setPeriod = _useState8[1];\n\n  var h24To12 = function h24To12(h, m) {\n    var minutesStr = ('0' + m).slice(-2); //slice method for extract last 2 digits\n\n    return h === 0 || h === 24 ? \"12:\".concat(minutesStr, \"am\") : h === 12 ? \"12:\".concat(minutesStr, \"pm\") : h % 12 + \":\".concat(minutesStr) + (h > 11 && h < 24 ? 'pm' : 'am');\n  };\n\n  var isExpress = function isExpress(dateString, days) {\n    var date = new Date(dateString);\n    var todayString = new Date().toISOString().split('T')[0];\n    var today = new Date(todayString);\n    var oneWeek = today.getTime() + days * 24 * 60 * 60 * 1000;\n    return date.getTime() < oneWeek;\n  };\n\n  useEffect(function () {\n    // const subscription = props.source.subscribe();\n    console.log(_JSON$stringify(router.query));\n    setQueryInput(router.query);\n    return function () {// subscription.unsubscribe();\n    };\n  }, []);\n  var title = 'Contact Page';\n  return React.createElement(Layout, null, React.createElement(Head, null, React.createElement(\"title\", null, title)), React.createElement(\"section\", {\n    className: \"enquiry section\"\n  }, React.createElement(\"div\", {\n    className: \"enq-header\"\n  }, \"Request of Services\"), React.createElement(\"div\", {\n    className: \"form-title\"\n  }, \"Customer Details\"), React.createElement(\"form\", {\n    className: \"enq-form\",\n    onSubmit: function onSubmit(e) {\n      e.preventDefault();\n      submitForm(e.target);\n    }\n  }, React.createElement(\"input\", {\n    type: \"text\",\n    id: \"fullname\",\n    name: \"fullname\",\n    placeholder: \"Full Name\",\n    required: true\n  }), React.createElement(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    name: \"email\",\n    placeholder: \"Email\",\n    required: true\n  }), React.createElement(\"p\", {\n    style: {\n      marginBottom: 0\n    }\n  }, \"Gender: \"), React.createElement(\"span\", {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"male\",\n    name: \"gender\",\n    value: \"male\"\n  }), React.createElement(\"label\", {\n    htmlFor: \"male\"\n  }, \"Male\")), React.createElement(\"span\", {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"female\",\n    name: \"gender\",\n    value: \"female\"\n  }), React.createElement(\"label\", {\n    htmlFor: \"female\"\n  }, \"Female\")), React.createElement(\"p\", {\n    style: {\n      marginBottom: 0\n    }\n  }, \"Age: \"), React.createElement(\"p\", {\n    style: {\n      marginTop: 0,\n      marginBottom: 0\n    }\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"age50below\",\n    name: \"age\",\n    value: \"49 or below\"\n  }), React.createElement(\"label\", {\n    htmlFor: \"age50below\"\n  }, \"49 or below\")), React.createElement(\"p\", {\n    style: {\n      marginTop: 0,\n      marginBottom: 0\n    }\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"age50-59\",\n    name: \"age\",\n    value: \"50 - 59\"\n  }), React.createElement(\"label\", {\n    htmlFor: \"age50-59\"\n  }, \"50- 59\")), React.createElement(\"p\", {\n    style: {\n      marginTop: 0,\n      marginBottom: 0\n    }\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"age60-69\",\n    name: \"age\",\n    value: \"60 - 69\"\n  }), React.createElement(\"label\", {\n    htmlFor: \"age60-69\"\n  }, \"60 -69\")), React.createElement(\"p\", {\n    style: {\n      marginTop: 0,\n      marginBottom: 0\n    }\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"age70-79\",\n    name: \"age\",\n    value: \"70 - 79\"\n  }), React.createElement(\"label\", {\n    htmlFor: \"age70-79\"\n  }, \"70 - 79\")), React.createElement(\"p\", {\n    style: {\n      marginTop: 0\n    }\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"age80above\",\n    name: \"age\",\n    value: \"80 or above\"\n  }), React.createElement(\"label\", {\n    htmlFor: \"age80above\"\n  }, \"80 or above\")), React.createElement(\"p\", {\n    style: {\n      marginBottom: 0\n    }\n  }, \"Health Status: \"), React.createElement(\"span\", {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"health-good\",\n    name: \"health\",\n    value: \"good\",\n    defaultChecked: true,\n    onChange: function onChange() {\n      return inputHealthStatus.current.className = 'disp-none';\n    }\n  }), React.createElement(\"label\", {\n    htmlFor: \"health-good\"\n  }, \"Good\")), React.createElement(\"span\", {\n    style: {\n      flex: 1\n    }\n  }, React.createElement(\"input\", {\n    type: \"radio\",\n    id: \"health-poor\",\n    name: \"health\",\n    value: \"poor\",\n    onChange: function onChange() {\n      return inputHealthStatus.current.className = 'disp-block';\n    }\n  }), React.createElement(\"label\", {\n    htmlFor: \"health-poor\"\n  }, \"Poor\")), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"healthstatus\",\n    name: \"healthstatus\",\n    placeholder: \"Elaborate health status\",\n    className: \"disp-none\",\n    ref: inputHealthStatus\n  }), React.createElement(\"input\", {\n    type: \"tel\",\n    id: \"phone\",\n    name: \"phone\",\n    placeholder: \"Hand Phone Contact (for urgent used)\",\n    required: true\n  }), React.createElement(\"textarea\", {\n    id: \"fulladdress\",\n    name: \"fulladdress\",\n    placeholder: \"Home Address\",\n    required: true\n  }), React.createElement(\"div\", {\n    className: \"form-title\"\n  }, \"Service Details\"), React.createElement(\"select\", {\n    id: \"enq-service\",\n    name: \"service\",\n    value: queryInput.service || \"\",\n    className: \"dropdown\",\n    required: true,\n    onInput: function onInput(e) {\n      console.log('e: ' + e.target.value);\n      inputOtherService.current.className = e.target.value === 'OtherService' ? 'disp-block' : 'disp-none';\n      setQueryInput(_objectSpread({}, queryInput, {\n        service: e.target.value\n      }));\n    }\n  }, React.createElement(\"option\", {\n    value: \"\"\n  }, \"Select Service\"), selection.services.map(function (service, i) {\n    return React.createElement(\"option\", {\n      value: service.service,\n      key: i\n    }, service.title);\n  })), React.createElement(\"input\", {\n    type: \"text\",\n    id: \"other\",\n    name: \"otherservice\",\n    className: \"disp-none\",\n    placeholder: \"Please specify other service\",\n    ref: inputOtherService\n  }), React.createElement(\"input\", {\n    type: \"date\",\n    id: \"date\",\n    name: \"date\",\n    placeholder: \"Date Service Needed\",\n    required: true,\n    value: queryInput.date || \"\",\n    min: nextDayDate(),\n    onChange: function onChange(e) {\n      setQueryInput(_objectSpread({}, queryInput, {\n        date: e.target.value\n      }));\n      /* set current date string from datepicker */\n\n      var selected = prices.common.periods.find(function (p) {\n        return p.hour === +selection.period;\n      });\n      /* get {price, period} object of selected period */\n\n      var tp = selected.price + (isExpress(e.target.value, prices.common.expressPeriod) ? prices.common.expressFee : 0);\n      /*  total price = sum of priod of selected period + express fee (if less than 7 days)*/\n\n      setTotalPrice(tp);\n      /* set total price */\n    }\n  }), React.createElement(\"p\", null, isExpress(queryInput.date, prices.common.expressPeriod) ? React.createElement(\"i\", {\n    className: \"mt-0\"\n  }, \"Express service selected (RM\", prices.common.expressFee, \".00)\") : null), React.createElement(\"p\", {\n    style: {\n      marginBottom: 0\n    }\n  }, \"Period: \"), React.createElement(\"div\", {\n    onChange: function onChange(e) {\n      var period = e.target.value;\n      /* current select hour: '3','4' or '5' (string) (hours) */\n\n      setSelection(_objectSpread({}, selection, {\n        period: period\n      }));\n      /* update period to state selection, {services,areas,period}  */\n\n      var selected = prices.common.periods.find(function (p) {\n        return p.hour === +period;\n      });\n      /* get selected {price,period} of current period */\n\n      setTotalPrice(selected.price + (isExpress(queryInput.date, prices.common.expressPeriod) ? prices.common.expressFee : 0));\n    }\n    /* update total price = period price + express fee (if less than 7 days) */\n    ,\n    value: period\n    /* value sync with onChange */\n\n  }, prices.common.periods.map(function (p, i) {\n    return (\n      /* loop prices.js object */\n      React.createElement(\"div\", null, React.createElement(\"input\", {\n        type: \"radio\",\n        id: 'period' + p.hour,\n        name: \"period\",\n        value: p.hour,\n        defaultChecked: i === 0,\n        required: true\n      }), React.createElement(\"label\", {\n        htmlFor: 'period' + p.hour\n      }, p.hour + ' Hours Services: Rm' + p.price + '.00'))\n    );\n  })), React.createElement(\"select\", {\n    id: \"enq-service\",\n    name: \"time\",\n    required: true,\n    value: queryInput.time || \"\",\n    onChange: function onChange(e) {\n      return setQueryInput(_objectSpread({}, queryInput, {\n        time: e.target.value\n      }));\n    },\n    className: \"dropdown\"\n  }, React.createElement(\"option\", {\n    value: \"\"\n  }, \"Select time period\"), _toConsumableArray(new Array(services.hourEnd - services.hourStart + 1)).map(function (_, i) {\n    return React.createElement(React.Fragment, null, i > 0 ? React.createElement(\"option\", {\n      key: i - .5\n    }, h24To12(services.hourStart + i - 1, 30), \" - \", h24To12(services.hourStart + i - 1 + +selection.period, 30) + ' (' + selection.period + ' hours)') : null, React.createElement(\"option\", {\n      key: i\n    }, h24To12(services.hourStart + i, 0), \" - \", h24To12(services.hourStart + i + +selection.period, 0) + ' (' + selection.period + ' hours)'));\n  })), React.createElement(\"select\", {\n    id: \"enq-area\",\n    name: \"area\",\n    required: true,\n    value: queryInput.area || \"\",\n    onChange: function onChange(e) {\n      return setQueryInput(_objectSpread({}, queryInput, {\n        area: e.target.value\n      }));\n    },\n    className: \"dropdown\"\n  }, React.createElement(\"option\", {\n    value: \"\"\n  }, \"Select Area\"), selection.areas.map(function (area, i) {\n    return React.createElement(\"option\", {\n      value: area.name,\n      disabled: !area.select,\n      key: i\n    }, area.name);\n  })), React.createElement(\"textarea\", {\n    id: \"pickup\",\n    name: \"pickup\",\n    placeholder: \"Pickup Location (please specify if different from home address)\"\n  }), React.createElement(\"textarea\", {\n    id: \"visit\",\n    name: \"visit\",\n    placeholder: \"Visit Location\",\n    required: true\n  }), React.createElement(\"input\", {\n    type: \"hidden\",\n    name: \"price\",\n    value: 'RM' + totalPrice + '.00'\n  }), React.createElement(\"h2\", null, \"Total Price: RM\", totalPrice, \".00\"), React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"Order\"\n  }))));\n};\n\nexport default Order;","map":{"version":3,"sources":["/home/calvin/cv-works/coding/family-helper/pages/OrderForm.js"],"names":["Head","Router","useRouter","React","useEffect","useRef","useState","areas","services","Layout","prices","submitForm","formData","data","form","fullname","value","email","gender","age","health","healthstatus","phone","fulladdress","service","otherservice","date","period","time","area","pickup","visit","price","fetch","method","headers","body","then","res","status","push","pathname","query","Error","e","console","error","message","Order","initSelection","items","klangValley","common","periods","hour","nextDayDate","today","Date","tomorrow","setDate","getDate","toISOString","split","inputHealthStatus","inputOtherService","selection","setSelection","totalPrice","setTotalPrice","queryInput","setQueryInput","router","setPeriod","h24To12","h","m","minutesStr","slice","isExpress","dateString","days","todayString","oneWeek","getTime","log","title","preventDefault","target","marginBottom","flex","marginTop","current","className","map","i","selected","find","p","tp","expressPeriod","expressFee","Array","hourEnd","hourStart","_","name","select"],"mappings":"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","sourcesContent":["import 'isomorphic-fetch';\nimport Head from 'next/head';\nimport Router, { useRouter } from 'next/router';\nimport React, { useEffect, useRef, useState } from 'react';\nimport areas from '../components/areas.js';\nimport services from '../components/items.js';\nimport Layout from '../components/Layout';\nimport prices from '../components/prices.js';\nimport \"../scss/fonts.scss\";\nimport \"../scss/style.scss\";\n\nconst submitForm = formData => { /* onSubmit event with input param, e.target (form) */\n\n  const data = {\n    form: {\n      fullname: formData.fullname.value,\n      email: formData.email.value,\n      gender: formData.gender.value,        \n      age: formData.age.value,\n      health: formData.health.value,\n      healthstatus: formData.healthstatus.value,\n      phone: formData.phone.value,\n      // phonehome: formData.phonehome.value,\n      fulladdress: formData.fulladdress.value,\n      // urgent: formData.urgent.value,\n      service: formData.service.value,\n      otherservice: formData.otherservice.value,\n      date: formData.date.value,\n      period: formData.period.value,\n      time: formData.time.value,\n      area: formData.area.value,\n      pickup: formData.pickup.value,\n      visit: formData.visit.value,\n      price: formData.price.value,\n    }\n  }\n\n  // console.log(JSON.stringify(data, null, 2));\n\n  fetch('/api/order', {\n    method: 'post',\n    headers: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(data)\n  }).then((res) => {\n    // res.status === 200 ? this.setState({ submitted: true }) : ''\n    if(res.status === 200) { \n      Router.push({\n        pathname: '/OrderCompleted',\n        query: data.form\n      })\n    } else throw new Error('Error: response status is ' + res.status);\n  }).catch( e => {\n    console.error(e.message);\n  })\n}\n\nconst Order = () => {\n\n  const initSelection = {\n    services: services.items,\n    areas: areas.klangValley,\n    period: prices.common.periods[0].hour\n  }\n\nconst nextDayDate =() => {\n    var today = new Date();\n    var tomorrow = new Date();\n    tomorrow.setDate(today.getDate()+1);\n    return tomorrow.toISOString().split('T')[0];\n  }\n\nconst inputHealthStatus = useRef();\nconst inputOtherService = useRef();\nconst [selection, setSelection] = useState(initSelection);\nconst [totalPrice, setTotalPrice] = useState(prices.common.periods[0].price);\nconst [queryInput, setQueryInput] = useState({});\nconst router = useRouter();\n\nconst [period, setPeriod] = useState(prices.common.periods[0].hour);\n\nconst h24To12 = (h,m) => {\n  const minutesStr = ('0' + m).slice(-2); //slice method for extract last 2 digits\n  return h === 0 || h === 24  ? `12:${minutesStr}am` :\n    h === 12 ? `12:${minutesStr}pm` :\n    h%12 + `:${minutesStr}` + (h > 11 && h < 24 ? 'pm' : 'am')\n}\n\nconst isExpress = (dateString, days) => {\n    const date = new Date(dateString);\n    const todayString = new Date().toISOString().split('T')[0];\n    const today = new Date(todayString);\n    const oneWeek = today.getTime() + days * 24 * 60 * 60 * 1000;\n    return date.getTime() < oneWeek;\n}\n\n\nuseEffect(\n  () => {\n    // const subscription = props.source.subscribe();\n    console.log(JSON.stringify(router.query));\n    setQueryInput(router.query);\n\n    return () => {\n      // subscription.unsubscribe();\n    };\n  },\n  [],\n);\n\n\nconst title = 'Contact Page';\n\nreturn (\n  <Layout>\n    <Head>\n      <title>{title}</title>\n    </Head>\n    <section className=\"enquiry section\">\n      <div className=\"enq-header\">Request of Services</div>\n      <div className=\"form-title\">Customer Details</div>\n      <form className=\"enq-form\" onSubmit={e => {\n        e.preventDefault()\n        submitForm(e.target)\n      }}>\n        \n        <input type=\"text\" id=\"fullname\" name=\"fullname\" placeholder=\"Full Name\" required/>\n        <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" required/>\n\n        <p style={{marginBottom: 0}}>Gender: </p>\n        <span style={{flex: 1}}>\n          <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\" />\n            <label htmlFor=\"male\">Male</label>\n        </span>\n        <span style={{flex: 1}}>              \n            <input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\" />\n          <label htmlFor=\"female\">Female</label>\n        </span>\n\n        <p style={{marginBottom: 0}}>Age: </p>\n        <p style={{marginTop: 0, marginBottom: 0}}>\n          <input type=\"radio\" id=\"age50below\" name=\"age\" value=\"49 or below\" />\n          <label htmlFor=\"age50below\">49 or below</label>\n        </p>\n        <p style={{marginTop: 0, marginBottom: 0}}>\n          <input type=\"radio\" id=\"age50-59\" name=\"age\" value=\"50 - 59\" />\n          <label htmlFor=\"age50-59\">50- 59</label>\n        </p> \n        <p style={{marginTop: 0, marginBottom: 0}}>\n          <input type=\"radio\" id=\"age60-69\" name=\"age\" value=\"60 - 69\" />\n          <label htmlFor=\"age60-69\">60 -69</label>\n        </p>\n        <p style={{marginTop: 0, marginBottom: 0}}>\n          <input type=\"radio\" id=\"age70-79\" name=\"age\" value=\"70 - 79\" />\n          <label htmlFor=\"age70-79\">70 - 79</label>\n        </p>               \n        <p style={{marginTop: 0}}>\n          <input type=\"radio\" id=\"age80above\" name=\"age\" value=\"80 or above\" />\n          <label htmlFor=\"age80above\">80 or above</label>\n        </p>     \n\n        <p style={{marginBottom: 0}}>Health Status: </p>\n        <span style={{flex: 1}}>\n          <input type=\"radio\" id=\"health-good\" name=\"health\" value=\"good\" defaultChecked={true} \n          onChange={()=>inputHealthStatus.current.className = 'disp-none'} \n          />\n          <label htmlFor=\"health-good\">Good</label>\n        </span>\n        <span style={{flex: 1}}>              \n            <input type=\"radio\" id=\"health-poor\" name=\"health\" value=\"poor\" \n            onChange={()=>inputHealthStatus.current.className = 'disp-block'}  \n            />\n          <label htmlFor=\"health-poor\">Poor</label>\n        </span>\n\n        <input type=\"text\" id=\"healthstatus\" name=\"healthstatus\" placeholder=\"Elaborate health status\" className=\"disp-none\"\n        ref={inputHealthStatus}\n        />\n\n        <input type=\"tel\" id=\"phone\" name=\"phone\" placeholder=\"Hand Phone Contact (for urgent used)\" required/>\n\n        {/* <input type=\"tel\" id=\"phone\" name=\"phonehome\" placeholder=\"House Phone Contact\"/> */}\n\n        <textarea id=\"fulladdress\" name=\"fulladdress\" placeholder=\"Home Address\" required></textarea>\n\n        {/* <input type=\"text\" id=\"urgent\" name=\"urgent\" placeholder=\"Urgent Phone Contact\" required/> */}\n        \n        <div className=\"form-title\">Service Details</div>\n\n        <select id=\"enq-service\" name=\"service\" \n        value={queryInput.service || \"\"}\n        className=\"dropdown\"\n        required\n        onInput={e=>{\n          console.log('e: ' + e.target.value)\n          inputOtherService.current.className = e.target.value==='OtherService'? 'disp-block': 'disp-none';\n          setQueryInput({ ...queryInput, service: e.target.value});\n          }\n        }>\n          <option value=\"\">Select Service</option>\n          {selection.services.map((service, i) => (\n            <option value={service.service} key={i}>{service.title}</option>\n          ))}\n        </select>\n\n        <input type=\"text\" id=\"other\" name=\"otherservice\" className=\"disp-none\" placeholder=\"Please specify other service\" \n        ref={inputOtherService}\n        />\n\n        <input type=\"date\" id=\"date\" name=\"date\" placeholder=\"Date Service Needed\" required\n          value={queryInput.date || \"\"}\n          min={nextDayDate()}\n          onChange={e => {\n            setQueryInput({ ...queryInput, date: e.target.value }); /* set current date string from datepicker */\n            const selected = prices.common.periods.find(p => p.hour === +selection.period); /* get {price, period} object of selected period */\n            var tp = selected.price + (isExpress(e.target.value, prices.common.expressPeriod) ? prices.common.expressFee : 0); /*  total price = sum of priod of selected period + express fee (if less than 7 days)*/\n            setTotalPrice(tp); /* set total price */    \n          }}\n        />\n        <p>{isExpress(queryInput.date, prices.common.expressPeriod) ? <i className=\"mt-0\">Express service selected (RM{prices.common.expressFee}.00)</i>: null}</p>\n\n        <p style={{marginBottom: 0}}>Period: </p>\n        <div onChange={(e)=>{\n          const period = e.target.value; /* current select hour: '3','4' or '5' (string) (hours) */\n          setSelection({ ...selection, period }); /* update period to state selection, {services,areas,period}  */\n\n          const selected = prices.common.periods.find(p=> p.hour === +period); /* get selected {price,period} of current period */\n          setTotalPrice(selected.price + (isExpress(queryInput.date, prices.common.expressPeriod) ? prices.common.expressFee: 0))\n          }} /* update total price = period price + express fee (if less than 7 days) */\n          value = {period} /* value sync with onChange */\n        >\n          \n            { prices.common.periods.map((p,i) => ( /* loop prices.js object */\n            <div>\n                <input type=\"radio\" id={'period' + p.hour} name=\"period\" value={p.hour} defaultChecked={i === 0} required />\n              <label htmlFor={'period' + p.hour}>{p.hour + ' Hours Services: Rm' + p.price + '.00'}</label> \n            </div>             \n            )) }\n          \n        </div>\n\n        <select id=\"enq-service\" name=\"time\" required\n          value={queryInput.time || \"\"}\n          onChange={e => setQueryInput({ ...queryInput, time: e.target.value })}\n          className=\"dropdown\">\n          <option value=\"\">Select time period</option>\n          {[...new Array(services.hourEnd - services.hourStart + 1)].map((_, i) => (\n            <React.Fragment>\n              {i>0? \n                <option key={i-.5}>{h24To12((services.hourStart + i-1), 30)} - {h24To12(services.hourStart + i-1 + +selection.period, 30) + ' (' + selection.period + ' hours)'} \n              </option>\n              :null}              \n              <option key={i}>{h24To12((services.hourStart + i), 0)} - {h24To12(services.hourStart + i + +selection.period, 0) + ' (' + selection.period + ' hours)'} \n              </option>\n            </React.Fragment>\n          ))}\n        </select>        \n\n        <select id=\"enq-area\" name=\"area\" required \n        value={queryInput.area || \"\"}\n        onChange={e => setQueryInput({ ...queryInput, area: e.target.value })}\n        className=\"dropdown\">\n          <option value=\"\">Select Area</option>\n          {selection.areas.map((area, i) => (\n            <option value={area.name} disabled={!area.select} key={i}>{area.name}</option>\n          ))}\n        </select>\n     \n        <textarea id=\"pickup\" name=\"pickup\" placeholder=\"Pickup Location (please specify if different from home address)\"></textarea>\n        <textarea id=\"visit\" name=\"visit\" placeholder=\"Visit Location\" required></textarea>\n        \n        <input type=\"hidden\" name=\"price\" value={'RM' + totalPrice + '.00'} />\n        <h2>Total Price: RM{totalPrice}.00</h2>\n        <input type=\"submit\" value=\"Order\" />\n      </form>\n    </section>\n  </Layout>\n)\n}\n\nexport default Order"]},"metadata":{},"sourceType":"module"}